services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    env_file:
      - environment.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - common
    restart: unless-stopped

  discovery-server:
    build: ./discovery-server
    image: discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - common
    restart: unless-stopped

  api-gateway:
    build: ./api-gateway
    image: api-gateway
    container_name: api-gateway
    depends_on:
      - discovery-server
    env_file:
      - environment.env
    ports:
      - "8086:8086"
    environment:
      - SPRING_APPLICATION_NAME=api-gateway
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_DEFAULT_ZONE}
    networks:
      - common
    restart: unless-stopped

  authentication-service:
    build: ./authentication-service
    image: authentication-service
    container_name: authentication-service
    depends_on:
      - discovery-server
      - rabbitmq
    env_file:
      - environment.env
    ports:
      - "8080:8080"
    environment:
      - SPRING_APPLICATION_NAME=authentication-service
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_DEFAULT_ZONE}

      # Remote Database Configuration
      - finance.mssql.db.jdbc=jdbc:sqlserver://${DB_HOST}:${DB_PORT}
      - finance.mssql.db.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
      - finance.mssql.db.username=${DB_USERNAME}
      - finance.mssql.db.password=${DB_PASSWORD}
      - finance.mssql.db.databaseName=${DB_NAME}
      - finance.mssql.db.trustSertificate=${DB_TRUST_CERTIFICATE}

      # Hikari Connection Pool
      - finance.db.hikari.maxPoolSize=${HIKARI_MAX_POOL_SIZE}
      - finance.db.hikari.minIdle=${HIKARI_MIN_IDLE}
      - finance.db.hikari.idleTimeOut=${HIKARI_IDLE_TIMEOUT}
      - finance.db.hikari.connTimeout=${HIKARI_CONNECTION_TIMEOUT}
      - finance.db.hikari.maxLifeTime=${HIKARI_MAX_LIFETIME}

      # JWT Configuration
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}
      
      # RabbitMQ Configuration
      - spring.rabbitmq.host=${RABBITMQ_HOST}
      - spring.rabbitmq.port=${RABBITMQ_PORT}
      - spring.rabbitmq.username=${RABBITMQ_USERNAME}
      - spring.rabbitmq.password=${RABBITMQ_PASSWORD}
    networks:
      - common
    restart: unless-stopped

  account-service:
    build: ./account-service
    image: account-service
    container_name: account-service
    depends_on:
      - discovery-server
    env_file:
      - environment.env
    ports:
      - "8081:8081"
    environment:
      - SPRING_APPLICATION_NAME=account-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_DEFAULT_ZONE}
      
      # Remote Database Configuration
      - finance.mssql.db.jdbc=jdbc:sqlserver://${DB_HOST}:${DB_PORT}
      - finance.mssql.db.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
      - finance.mssql.db.username=${DB_USERNAME}
      - finance.mssql.db.password=${DB_PASSWORD}
      - finance.mssql.db.databaseName=${DB_NAME}
      - finance.mssql.db.trustSertificate=${DB_TRUST_CERTIFICATE}
      
      # Hikari Connection Pool
      - finance.db.hikari.maxPoolSize=${HIKARI_MAX_POOL_SIZE}
      - finance.db.hikari.minIdle=${HIKARI_MIN_IDLE}
      - finance.db.hikari.idleTimeOut=${HIKARI_IDLE_TIMEOUT}
      - finance.db.hikari.connTimeout=${HIKARI_CONNECTION_TIMEOUT}
      - finance.db.hikari.maxLifeTime=${HIKARI_MAX_LIFETIME}
      
      # JWT Configuration
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}
    networks:
      - common
    restart: unless-stopped

  currency-exchange-service:
    build: ./currency-exchange-service
    image: currency-exchange-service
    container_name: currency-exchange-service
    depends_on:
      - discovery-server
    env_file:
      - environment.env
    ports:
      - "8083:8083"
    environment:
      - SPRING_APPLICATION_NAME=currency-exchange-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_DEFAULT_ZONE}
      
      # Remote Database Configuration
      - finance.mssql.db.jdbc=jdbc:sqlserver://${DB_HOST}:${DB_PORT}
      - finance.mssql.db.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
      - finance.mssql.db.username=${DB_USERNAME}
      - finance.mssql.db.password=${DB_PASSWORD}
      - finance.mssql.db.databaseName=${DB_NAME}
      - finance.mssql.db.trustSertificate=${DB_TRUST_CERTIFICATE}
      
      # Hikari Connection Pool
      - finance.db.hikari.maxPoolSize=${HIKARI_MAX_POOL_SIZE}
      - finance.db.hikari.minIdle=${HIKARI_MIN_IDLE}
      - finance.db.hikari.idleTimeOut=${HIKARI_IDLE_TIMEOUT}
      - finance.db.hikari.connTimeout=${HIKARI_CONNECTION_TIMEOUT}
      - finance.db.hikari.maxLifeTime=${HIKARI_MAX_LIFETIME}
      
      # JWT Configuration
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}
    networks:
      - common
    restart: unless-stopped

  user-service:
    build: ./user-service
    image: user-service
    container_name: user-service
    depends_on:
      - discovery-server
    env_file:
      - environment.env
    ports:
      - "8084:8084"
    environment:
      - SPRING_APPLICATION_NAME=user-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_DEFAULT_ZONE}
      
      # Remote Database Configuration
      - finance.mssql.db.jdbc=jdbc:sqlserver://${DB_HOST}:${DB_PORT}
      - finance.mssql.db.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
      - finance.mssql.db.username=${DB_USERNAME}
      - finance.mssql.db.password=${DB_PASSWORD}
      - finance.mssql.db.databaseName=${DB_NAME}
      - finance.mssql.db.trustSertificate=${DB_TRUST_CERTIFICATE}
      
      # Hikari Connection Pool
      - finance.db.hikari.maxPoolSize=${HIKARI_MAX_POOL_SIZE}
      - finance.db.hikari.minIdle=${HIKARI_MIN_IDLE}
      - finance.db.hikari.idleTimeOut=${HIKARI_IDLE_TIMEOUT}
      - finance.db.hikari.connTimeout=${HIKARI_CONNECTION_TIMEOUT}
      - finance.db.hikari.maxLifeTime=${HIKARI_MAX_LIFETIME}
      
      # JWT Configuration
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}
    networks:
      - common
    restart: unless-stopped

  notification-service:
    build: ./notification-service
    image: notification-service
    container_name: notification-service
    depends_on:
      - discovery-server
      - rabbitmq
    env_file:
      - environment.env
    ports:
      - "8085:8085"
    environment:
      - SPRING_APPLICATION_NAME=notification-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_DEFAULT_ZONE}
      
      # Remote Database Configuration
      - finance.mssql.db.jdbc=jdbc:sqlserver://${DB_HOST}:${DB_PORT}
      - finance.mssql.db.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
      - finance.mssql.db.username=${DB_USERNAME}
      - finance.mssql.db.password=${DB_PASSWORD}
      - finance.mssql.db.databaseName=${DB_NAME}
      - finance.mssql.db.trustSertificate=${DB_TRUST_CERTIFICATE}
      
      # Hikari Connection Pool
      - finance.db.hikari.maxPoolSize=${HIKARI_MAX_POOL_SIZE}
      - finance.db.hikari.minIdle=${HIKARI_MIN_IDLE}
      - finance.db.hikari.idleTimeOut=${HIKARI_IDLE_TIMEOUT}
      - finance.db.hikari.connTimeout=${HIKARI_CONNECTION_TIMEOUT}
      - finance.db.hikari.maxLifeTime=${HIKARI_MAX_LIFETIME}
      
      # JWT Configuration
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}
      
      # RabbitMQ Configuration
      - spring.rabbitmq.host=${RABBITMQ_HOST}
      - spring.rabbitmq.port=${RABBITMQ_PORT}
      - spring.rabbitmq.username=${RABBITMQ_USERNAME}
      - spring.rabbitmq.password=${RABBITMQ_PASSWORD}
      
      # Email Configuration
      - spring.mail.host=${SMTP_HOST}
      - spring.mail.port=${SMTP_PORT}
      - spring.mail.username=${SMTP_USERNAME}
      - spring.mail.password=${SMTP_PASSWORD}
    networks:
      - common
    restart: unless-stopped

  # Monitoring Services
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "5000:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    depends_on:
      - authentication-service
      - user-service
      - notification-service
      - account-service
      - currency-exchange-service
    networks:
      - common

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    env_file:
      - environment.env
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    networks:
      - common

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - common

volumes:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  common:
    driver: bridge